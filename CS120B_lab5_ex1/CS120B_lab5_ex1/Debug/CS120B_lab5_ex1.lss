
CS120B_lab5_ex1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000017c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001d0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000200  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000240  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000836  00000000  00000000  00000260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078b  00000000  00000000  00000a96  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002f4  00000000  00000000  00001221  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001518  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f3  00000000  00000000  0000154c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  0000193f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001987  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	6e c0       	rjmp	.+220    	; 0x178 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

#include <avr/io.h>


int main(void)
{
  9e:	cf 93       	push	r28
  a0:	df 93       	push	r29
  a2:	00 d0       	rcall	.+0      	; 0xa4 <main+0x6>
  a4:	cd b7       	in	r28, 0x3d	; 61
  a6:	de b7       	in	r29, 0x3e	; 62
	 DDRA = 0x00; PORTA = 0xFF; 
  a8:	81 e2       	ldi	r24, 0x21	; 33
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	fc 01       	movw	r30, r24
  ae:	10 82       	st	Z, r1
  b0:	82 e2       	ldi	r24, 0x22	; 34
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	2f ef       	ldi	r18, 0xFF	; 255
  b6:	fc 01       	movw	r30, r24
  b8:	20 83       	st	Z, r18
	 DDRC = 0xFF; PORTC = 0x00; 
  ba:	87 e2       	ldi	r24, 0x27	; 39
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	2f ef       	ldi	r18, 0xFF	; 255
  c0:	fc 01       	movw	r30, r24
  c2:	20 83       	st	Z, r18
  c4:	88 e2       	ldi	r24, 0x28	; 40
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	fc 01       	movw	r30, r24
  ca:	10 82       	st	Z, r1

	 unsigned char tmpA = 0x00; 
  cc:	1a 82       	std	Y+2, r1	; 0x02
	 unsigned char tmpC = 0x00;
  ce:	19 82       	std	Y+1, r1	; 0x01
    
    while (1) 
    {
		 tmpC = 0x00;
  d0:	19 82       	std	Y+1, r1	; 0x01
		 tmpA = ~PINA & 0x0F;
  d2:	80 e2       	ldi	r24, 0x20	; 32
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	fc 01       	movw	r30, r24
  d8:	80 81       	ld	r24, Z
  da:	80 95       	com	r24
  dc:	8f 70       	andi	r24, 0x0F	; 15
  de:	8a 83       	std	Y+2, r24	; 0x02

		 if(tmpA == 1 || tmpA == 2){
  e0:	8a 81       	ldd	r24, Y+2	; 0x02
  e2:	81 30       	cpi	r24, 0x01	; 1
  e4:	19 f0       	breq	.+6      	; 0xec <main+0x4e>
  e6:	8a 81       	ldd	r24, Y+2	; 0x02
  e8:	82 30       	cpi	r24, 0x02	; 2
  ea:	19 f4       	brne	.+6      	; 0xf2 <main+0x54>
			 tmpC = 0x20;
  ec:	80 e2       	ldi	r24, 0x20	; 32
  ee:	89 83       	std	Y+1, r24	; 0x01
  f0:	37 c0       	rjmp	.+110    	; 0x160 <main+0xc2>
		 }

		 else if(tmpA == 3 || tmpA == 4){
  f2:	8a 81       	ldd	r24, Y+2	; 0x02
  f4:	83 30       	cpi	r24, 0x03	; 3
  f6:	19 f0       	breq	.+6      	; 0xfe <main+0x60>
  f8:	8a 81       	ldd	r24, Y+2	; 0x02
  fa:	84 30       	cpi	r24, 0x04	; 4
  fc:	19 f4       	brne	.+6      	; 0x104 <main+0x66>
			 tmpC = 0x30;
  fe:	80 e3       	ldi	r24, 0x30	; 48
 100:	89 83       	std	Y+1, r24	; 0x01
 102:	2e c0       	rjmp	.+92     	; 0x160 <main+0xc2>
		 }

		 else if(tmpA == 5 || tmpA == 6){
 104:	8a 81       	ldd	r24, Y+2	; 0x02
 106:	85 30       	cpi	r24, 0x05	; 5
 108:	19 f0       	breq	.+6      	; 0x110 <main+0x72>
 10a:	8a 81       	ldd	r24, Y+2	; 0x02
 10c:	86 30       	cpi	r24, 0x06	; 6
 10e:	19 f4       	brne	.+6      	; 0x116 <main+0x78>
			 tmpC = 0x38;
 110:	88 e3       	ldi	r24, 0x38	; 56
 112:	89 83       	std	Y+1, r24	; 0x01
 114:	25 c0       	rjmp	.+74     	; 0x160 <main+0xc2>
		 }

		 else if(tmpA == 7 || tmpA == 8 || tmpA == 9){
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	87 30       	cpi	r24, 0x07	; 7
 11a:	31 f0       	breq	.+12     	; 0x128 <main+0x8a>
 11c:	8a 81       	ldd	r24, Y+2	; 0x02
 11e:	88 30       	cpi	r24, 0x08	; 8
 120:	19 f0       	breq	.+6      	; 0x128 <main+0x8a>
 122:	8a 81       	ldd	r24, Y+2	; 0x02
 124:	89 30       	cpi	r24, 0x09	; 9
 126:	19 f4       	brne	.+6      	; 0x12e <main+0x90>
			 tmpC = 0x3C;
 128:	8c e3       	ldi	r24, 0x3C	; 60
 12a:	89 83       	std	Y+1, r24	; 0x01
 12c:	19 c0       	rjmp	.+50     	; 0x160 <main+0xc2>
		 }

		 else if( tmpA == 10 || tmpA == 11 || tmpA == 12){
 12e:	8a 81       	ldd	r24, Y+2	; 0x02
 130:	8a 30       	cpi	r24, 0x0A	; 10
 132:	31 f0       	breq	.+12     	; 0x140 <main+0xa2>
 134:	8a 81       	ldd	r24, Y+2	; 0x02
 136:	8b 30       	cpi	r24, 0x0B	; 11
 138:	19 f0       	breq	.+6      	; 0x140 <main+0xa2>
 13a:	8a 81       	ldd	r24, Y+2	; 0x02
 13c:	8c 30       	cpi	r24, 0x0C	; 12
 13e:	19 f4       	brne	.+6      	; 0x146 <main+0xa8>
			 tmpC = 0x3E;
 140:	8e e3       	ldi	r24, 0x3E	; 62
 142:	89 83       	std	Y+1, r24	; 0x01
 144:	0d c0       	rjmp	.+26     	; 0x160 <main+0xc2>
		 }

		 else if(tmpA == 13 || tmpA == 14 || tmpA == 15){
 146:	8a 81       	ldd	r24, Y+2	; 0x02
 148:	8d 30       	cpi	r24, 0x0D	; 13
 14a:	31 f0       	breq	.+12     	; 0x158 <main+0xba>
 14c:	8a 81       	ldd	r24, Y+2	; 0x02
 14e:	8e 30       	cpi	r24, 0x0E	; 14
 150:	19 f0       	breq	.+6      	; 0x158 <main+0xba>
 152:	8a 81       	ldd	r24, Y+2	; 0x02
 154:	8f 30       	cpi	r24, 0x0F	; 15
 156:	19 f4       	brne	.+6      	; 0x15e <main+0xc0>
			 tmpC = 0x3F;
 158:	8f e3       	ldi	r24, 0x3F	; 63
 15a:	89 83       	std	Y+1, r24	; 0x01
 15c:	01 c0       	rjmp	.+2      	; 0x160 <main+0xc2>
		 }
		 else{
			 tmpC = 0;
 15e:	19 82       	std	Y+1, r1	; 0x01
		 }

		 if(tmpA <= 4){
 160:	8a 81       	ldd	r24, Y+2	; 0x02
 162:	85 30       	cpi	r24, 0x05	; 5
 164:	18 f4       	brcc	.+6      	; 0x16c <main+0xce>
			 tmpC = tmpC | 0x40;
 166:	89 81       	ldd	r24, Y+1	; 0x01
 168:	80 64       	ori	r24, 0x40	; 64
 16a:	89 83       	std	Y+1, r24	; 0x01
		 }

		 PORTC = tmpC;
 16c:	88 e2       	ldi	r24, 0x28	; 40
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	29 81       	ldd	r18, Y+1	; 0x01
 172:	fc 01       	movw	r30, r24
 174:	20 83       	st	Z, r18
    }
 176:	ac cf       	rjmp	.-168    	; 0xd0 <main+0x32>

00000178 <_exit>:
 178:	f8 94       	cli

0000017a <__stop_program>:
 17a:	ff cf       	rjmp	.-2      	; 0x17a <__stop_program>
